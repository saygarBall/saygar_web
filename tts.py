import os
import sqlite3
from gtts import gTTS
import re
from concurrent.futures import ThreadPoolExecutor

BASE_DIR = os.path.dirname(os.path.abspath(__file__))
DB_FILE = os.path.join(BASE_DIR, "database.db")
AUDIO_DIR = os.path.join(BASE_DIR, "static", "audio")

def sanitize_filename(name):
    """ ‡∏•‡∏ö‡∏≠‡∏±‡∏Å‡∏Ç‡∏£‡∏∞‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå """
    return re.sub(r'[\\/:"*?<>|]+', "", name).strip()

def ensure_audio_dir():
    os.makedirs(AUDIO_DIR, exist_ok=True)

def should_skip_content(content):
    """ ‡∏Ç‡πâ‡∏≤‡∏°‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ download_file= ‡∏´‡∏£‡∏∑‡∏≠ media_file= """
    lines = content.lower().splitlines()
    return any(line.startswith("download_file=") or line.startswith("media_file=") for line in lines)

def generate_tts(title, content):
    """ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏à‡∏≤‡∏Å‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏° """
    try:
        clean_title = sanitize_filename(title)
        output_path = os.path.join(AUDIO_DIR, f"{clean_title}.mp3")

        if os.path.exists(output_path):
            print(f"‚úÖ ‡∏Ç‡πâ‡∏≤‡∏°: {clean_title}.mp3 (‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß)")
            return

        if should_skip_content(content):
            print(f"‚ö† ‡∏Ç‡πâ‡∏≤‡∏°: {clean_title} (‡∏°‡∏µ download_file= ‡∏´‡∏£‡∏∑‡∏≠ media_file=)")
            return

        print(f"üé§ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á: {clean_title}.mp3 ...")
        tts = gTTS(text=content, lang="th")
        tts.save(output_path)
        print(f"‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß -> {output_path}")
    except Exception as e:
        print(f"‚ùå ‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà: {title} ‚Üí {e}")

def process_articles():
    ensure_audio_dir()

    if not os.path.exists(DB_FILE):
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: {DB_FILE}")
        return

    conn = sqlite3.connect(DB_FILE)
    cursor = conn.cursor()
    cursor.execute("SELECT title, content FROM articles")
    articles = cursor.fetchall()
    conn.close()

    print(f"üîé ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {len(articles)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")

    with ThreadPoolExecutor(max_workers=5) as executor:
        for title, content in articles:
            if not title or not content.strip():
                continue
            executor.submit(generate_tts, title, content)

if __name__ == "__main__":
    print("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏õ‡∏•‡∏á‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á (‡∏Ç‡πâ‡∏≤‡∏°‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ download/media ‡∏´‡∏£‡∏∑‡∏≠‡∏°‡∏µ mp3 ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß)...")
    process_articles()
    print("üéâ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡∏ó‡∏∏‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö!")
